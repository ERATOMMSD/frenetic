import abc

import logging
logger = logging.getLogger(__name__)

class Executor(abc.ABC):

    def __init__(self, normalizer=None):
        self.normalizer = normalizer
        pass

    def execute_test(self, test_dict: dict) -> dict:
        logger.debug(f"Execution of test generated by {test_dict['method']}")
        test = test_dict["test"]
        if self.normalizer:
            test = self.normalizer.normalize(test_dict["test"])
        test_dict.update(self.execute(test))
        return test_dict

    @abc.abstractmethod
    def execute(self, test) -> dict:
        pass
